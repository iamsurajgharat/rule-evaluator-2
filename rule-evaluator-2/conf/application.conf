# https://www.playframework.com/documentation/latest/Configuration

play.http.parser.maxMemoryBuffer=128K
play.http.secret.key=${?APPLICATION_SECRET}
play.filters.hosts.allowed=["."]

play.http.errorHandler = play.api.http.JsonHttpErrorHandler

play.modules.enabled += "io.github.iamsurajgharat.ruleevaluator.modules.Module"

#play.application.loader=io.github.iamsurajgharat.ruleevaluator.loaders.MyApplicationLoader

runtime.mode=Local
runtime.mode=${?RUNTIME_MODE}

play.akka.actor-system = "ruleevalactorsystem"


akka {
  actor {
    provider = "cluster"
    
    serializers {
      jackson-json = "akka.serialization.jackson.JacksonJsonSerializer"
      record-json = "io.github.iamsurajgharat.ruleevaluator.helpers.PlayJsonSerializer"
    }

    serialization-bindings {
      "io.github.iamsurajgharat.ruleevaluator.actors.MySerializable" = jackson-json
      "io.github.iamsurajgharat.ruleevaluator.actors.RuleActor$EvaluateRulesRequest" = record-json
    }
  }
  
  remote.artery {
    canonical {
      hostname = "127.0.0.1"
      port = 2551
    }
  }

  cluster {
    seed-nodes = ["akka://ruleevalactorsystem@127.0.0.1:2551"]
    shutdown-after-unsuccessful-join-seed-nodes = 60s
    downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
  }
  coordinated-shutdown.exit-jvm = off

  akka.serialization.jackson {
    serialization-features {
      FAIL_ON_EMPTY_BEANS = off
    }
  }
}

akka.management {
  cluster.bootstrap {
    contact-point-discovery {
      discovery-method = kubernetes-api
    }
  }
}



extensions = [akka.persistence.Persistence]


# In-memory journal plugin.
# akka.persistence.journal.plugin = "akka.persistence.journal.inmem"
# akka.persistence.journal.inmem {
#     class = "akka.persistence.journal.inmem.InmemJournal"
#     plugin-dispatcher = "akka.actor.default-dispatcher"
#     test-serialization = off
# }

# 
akka.persistence.journal.plugin = "jdbc-journal"
akka.persistence.snapshot-store.plugin = "jdbc-snapshot-store"

akka-persistence-jdbc {
  shared-databases {
    slick {
      profile = "slick.jdbc.PostgresProfile$"
      db {
        host = "127.0.0.1"
        host = ${?POSTGRES_HOST}
        url = "jdbc:postgresql://"${akka-persistence-jdbc.shared-databases.slick.db.host}":5432/postgres?reWriteBatchedInserts=true"
        user = "postgres"
        user = ${?POSTGRES_USER}
        password = "qwerty1234"
        password = ${?POSTGRES_PASSWORD}
        driver = "org.postgresql.Driver"
        numThreads = 5
        maxConnections = 5
        minConnections = 1
      }
    }
  }
}

jdbc-journal {
  use-shared-db = "slick"
}

# the akka-persistence-snapshot-store in use
jdbc-snapshot-store {
  use-shared-db = "slick"
}