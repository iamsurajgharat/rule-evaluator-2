# https://www.playframework.com/documentation/latest/Configuration

play.http.parser.maxMemoryBuffer=128K
play.http.secret.key=${?APPLICATION_SECRET}
play.filters.hosts.allowed=["."]

play.http.errorHandler = play.api.http.JsonHttpErrorHandler

play.modules.enabled += "io.github.iamsurajgharat.ruleevaluator.modules.Module"

#play.application.loader=io.github.iamsurajgharat.ruleevaluator.loaders.MyApplicationLoader

runtime.mode=Local
runtime.mode=${?RUNTIME_MODE}

play.akka.actor-system = "ruleevalactorsystem"


  akka {
    actor {
      provider = "cluster"
    }
    # remote.artery {
    #   canonical {
    #     hostname = "127.0.0.1"
    #     port = 2551
    #   }
    # }

    cluster {
      #seed-nodes = ["akka://RuleEvalActorSystem@127.0.0.1:2551"]
      shutdown-after-unsuccessful-join-seed-nodes = 60s
      downing-provider-class = "akka.cluster.sbr.SplitBrainResolverProvider"
    }
    coordinated-shutdown.exit-jvm = off
  }

  akka.management {
    cluster.bootstrap {
      contact-point-discovery {
        discovery-method = kubernetes-api
      }
    }
  }



akka.persistence.journal.plugin = "akka.persistence.journal.inmem"

# In-memory journal plugin.
akka.persistence.journal.inmem {
    # Class name of the plugin.
    class = "akka.persistence.journal.inmem.InmemJournal"
    # Dispatcher for the plugin actor.
    plugin-dispatcher = "akka.actor.default-dispatcher"

    # Turn this on to test serialization of the events
    test-serialization = off
}